<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsc.exam.dao.mapper.TbExamStudentMapper">
  <resultMap id="BaseResultMap" type="com.lsc.exam.dao.model.TbExamStudent">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="taotiId" jdbcType="INTEGER" property="taotiid" />
    <result column="taotiName" jdbcType="VARCHAR" property="taotiname" />
    <result column="studentId" jdbcType="VARCHAR" property="studentid" />
    <result column="studentName" jdbcType="VARCHAR" property="studentname" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, taotiId, taotiName, studentId, studentName, status
  </sql>
  <select id="selectByExample" parameterType="com.lsc.exam.dao.model.TbExamStudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_exam_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.lsc.exam.dao.model.TbExamStudentExample">
    delete from tb_exam_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lsc.exam.dao.model.TbExamStudent">
    insert into tb_exam_student (id, taotiId, taotiName, 
      studentId, studentName, status
      )
    values (#{id,jdbcType=INTEGER}, #{taotiid,jdbcType=INTEGER}, #{taotiname,jdbcType=VARCHAR}, 
      #{studentid,jdbcType=VARCHAR}, #{studentname,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lsc.exam.dao.model.TbExamStudent">
    insert into tb_exam_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taotiid != null">
        taotiId,
      </if>
      <if test="taotiname != null">
        taotiName,
      </if>
      <if test="studentid != null">
        studentId,
      </if>
      <if test="studentname != null">
        studentName,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="taotiid != null">
        #{taotiid,jdbcType=INTEGER},
      </if>
      <if test="taotiname != null">
        #{taotiname,jdbcType=VARCHAR},
      </if>
      <if test="studentid != null">
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="studentname != null">
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lsc.exam.dao.model.TbExamStudentExample" resultType="java.lang.Long">
    select count(*) from tb_exam_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_exam_student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.taotiid != null">
        taotiId = #{record.taotiid,jdbcType=INTEGER},
      </if>
      <if test="record.taotiname != null">
        taotiName = #{record.taotiname,jdbcType=VARCHAR},
      </if>
      <if test="record.studentid != null">
        studentId = #{record.studentid,jdbcType=VARCHAR},
      </if>
      <if test="record.studentname != null">
        studentName = #{record.studentname,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_exam_student
    set id = #{record.id,jdbcType=INTEGER},
      taotiId = #{record.taotiid,jdbcType=INTEGER},
      taotiName = #{record.taotiname,jdbcType=VARCHAR},
      studentId = #{record.studentid,jdbcType=VARCHAR},
      studentName = #{record.studentname,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>